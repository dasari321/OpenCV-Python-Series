import cv2
import numpy as np
font = cv2.FONT_HERSHEY_COMPLEX


img = cv2.imread("Slide9.PNG", cv2.IMREAD_GRAYSCALE)
oriimage = cv2.imread("Slide9.PNG")
_, threshold = cv2.threshold(img, 200, 255, cv2.THRESH_BINARY)
contours, _ = cv2.findContours(threshold, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

for cnt in contours:
    approx = cv2.approxPolyDP(cnt, 0.02*cv2.arcLength(cnt, True), True)
    cv2.drawContours(img, [approx], 0, (0), 2)
    x = approx.ravel()[0]
    y = approx.ravel()[1]
    if len(approx) == 3:
        cv2.putText(img, "Triangle", (x-25, y-10), font, 0.5, (0))
    elif len(approx) == 4:
        x1, y1, w, h = cv2.boundingRect(approx)
        aspectRatio = float(w/h)
        print(aspectRatio)
        if aspectRatio >= 0.95 and aspectRatio <= 1.05:
            cv2.putText(img, "Square", (x-3, y-6), font, 0.5, (0))
        else:
            cv2.putText(img, "Rectangle", (x, y-3), font, 0.5, (0))
    elif len(approx) == 5:
        cv2.putText(img, "Pentagon", (x, y), font, 0.5, (0))
    elif len(approx) == 10:
        cv2.putText(img, "Star", (x, y), font, 0.5, (0))
    else:
        cv2.putText(img, "Circle", (x-10, y-5), font, 0.5, (0))


cv2.imshow("Original", oriimage)
cv2.imshow("Shapes", img)

cv2.waitKey(0)
cv2.destroyAllWindows()
